@model Dziennik.Models.Administrator
@{
    ViewBag.Title = "Profil";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<input type="text" name="Textbox2" id="haslo" value="@Model.haslo" hidden="hidden" /><br />

@if (ViewBag.control == 1)
{
    <div class="alert alert-danger">
        <strong>Nie zmieniono loginu.</strong> Login istnieje w bazie.

        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<h2>Profil użytkownika</h2>

<div class="container">

    <br>
    <!-- Nav pills -->
    <ul class="nav nav-pills nav-stacked col-md-2" role="tablist">
        <li class="nav-item active">
            <a class="nav-link active" data-toggle="pill" href="#home">Informacje ogólne</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="pill" href="#menu1">Zmień login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="pill" href="#menu2">Zmień hasło</a>
        </li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div id="home" class="container tab-pane active ">
            <div class="col-md-3">
                <ul class="list-group">
                    <li class="list-group-item">
                        <label class="text-muted">Imię i nazwisko</label>

                        <h4><label>@Model.FullName </label></h4>

                    </li>

                    <li class="list-group-item">
                        <label class="text-muted">Status konta</label>

                        <h4><label>@Session["Status"] </label></h4>

                    </li>

                    <li class="list-group-item">
                        <label class="text-muted">Nazwa użytkownika</label>

                        <h4><label>@Model.login </label></h4>

                    </li>

                </ul>
            </div>
        </div>
        <div id="menu1" class="container tab-pane d-xl-table-row fade">
            <div class="col-md-10">
                @using (Html.BeginForm("Zmien_login", "Administrator", FormMethod.Post, new { @id = "myform" }))
                {

                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.imie)
                    @Html.HiddenFor(model => model.nazwisko)
                    @Html.HiddenFor(model => model.haslo)
                    <div class="row">
                        <label class=" text-muted col-md-2">Login</label>
                        @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control", @id = "field2" } })
                        @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })

                    </div>
                    <br />
                    <div class="row">

                        <label class="text-muted col-md-2">Powtórz login</label>
                        <input class="form-control" id="field1" name="field1">
                        <div class="errorTxt1" style="color:red;"></div>
                    </div>
                    <br /><br />

                    <div class="row">
                        <button type="submit" class="btn btn-primary col">
                            Submit
                        </button>
                    </div>
                }

            </div>


        </div>
        <div id="menu2" class="container tab-pane fade">
            <div class="col-md-10">
                @using (Html.BeginForm("Zmien_haslo", "Administrator", FormMethod.Post, new { @id = "myform1" }))
                {


                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.ID)
                    @Html.HiddenFor(model => model.imie)
                    @Html.HiddenFor(model => model.nazwisko)
                    @Html.HiddenFor(model => model.login)
                <div class="row">
                    <label class=" text-muted col-md-2">Aktualne hasło</label>

                    <input class="form-control" type="password" id="pas1" name="pas1">
                    


                </div>
                    <br />
                    <div class="row">

                        <label class="text-muted col-md-2">Nowe hasło</label>
                        @Html.EditorFor(model => model.haslo, new { htmlAttributes = new { @class = "form-control", @id = "pas2", @type = "password" } })
                        
                    </div>

                    <br />
                    <div class="row">

                        <label class="text-muted col-md-2">Powtórz hasło</label>
                        <input class="form-control" type="password" id="pas3" name="pas3">
                        <div class="errorTxt" style="color:red;"></div>

                    </div>
                    <br /><br />

                    <div class="row">
                        <button type="submit" class="btn btn-primary col">
                            Submit
                        </button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>
<script>
    $(document).ready(function () {
    $("#pas2").val('');

     });


    $('form[id="myform"]').validate({
        rules: {
            field1: {
                equalTo: '#field2'

            }

        },


        messages: {
            field1: {
                equalTo: 'Wprowadzone loginy są różne'

            }
        },
        errorElement: 'div',
        errorLabelContainer: '.errorTxt1',
        submitHandler: function (form) {
            form.submit();
        }
    });



    $('form[id="myform1"]').validate({
        rules: {
            pas1: {
                equalTo: '#haslo'

            },
            
             pas3: {
                 equalTo: '#pas2',
                 required: true,
                 minlength: 8
            }

        },


        messages: {
            pas1: {
                equalTo: 'Wprowadzono nieprawidłowe hasło'

            },

          
            pas3: {
                equalTo: 'Wprowadzone hasła są różne.',
                required: 'Wprowadź hasło',
                minlength: 'Hasło za krótkie. Minimum 8 znaków.'
                

            }
        },
        errorElement: 'div',
        errorLabelContainer: '.errorTxt',
        submitHandler: function (form1) {
            form.submit();
        }
        });
   
</script>

